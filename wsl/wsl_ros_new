#!/usr/bin/env bash
# locate in: /usr/local/bin/

IT='\033[3m'
NC='\033[0m'

COMMAND=$1

rbroot=/mnt/"$wsl_ros_backup_path"
if [ ! -d "$rbroot" ]; then
  echo "Error: can't access $rbroot"
  exit 1
fi

BACKUP_FILE_NAME=ros-backup-$(echo $WSL_ROS_VER | sed "s/[^0-9']//g")
BACKUP_FILE_PATH_NOEX="$rbroot"/wsl-ros/"$BACKUP_FILE_NAME"
BACKUP_FILE_PATH_FULL=$BACKUP_FILE_PATH_NOEX'.tar.gz'
BACKUP_FILE_PATH_WINDOWS=$(sed "s/\/mnt\/u/U\:/;s/\//\\\/g" <<< "$BACKUP_FILE_PATH_FULL")
BACKUP_FILE_DIR=$(sed "s/\/[^/]*$//" <<< $BACKUP_FILE_PATH_NOEX)
BACKUP_LOGFILE=$BACKUP_FILE_PATH_NOEX'-log.txt'

usage() {
  echo -e "${IT}wsl_ros${NC} backup/restore command line interface.

  Usage:
  $ wsl_ros [COMMAND]

  [COMMAND] options:
    backup    ${IT}Backup${NC} files in your WSL home directory.
    restore   ${IT}Restore${NC} an existing backup file.

  Backup file: "
  echo "    $BACKUP_FILE_PATH_WINDOWS"
}

if [[ "$COMMAND" == "" ]]; then
  echo -e "No input command provided...\n"
  usage
  exit 1
fi

backup_exists() {
  if [ -f $BACKUP_FILE_PATH_FULL ]; then
    return 0
  else
    return 1
  fi
}

ask() {
  # adapted from https://gist.github.com/davejamesmiller/1965569
  local prompt default reply
  prompt='y/n'
  default=''
  while true; do
    # Ask the question (not using "read -p" as it uses stderr not stdout)
    echo -n "$1 [$prompt] "
    # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
    read -r reply </dev/tty
    # Default?
    if [[ -z $reply ]]; then
      reply=$default
    fi
    # Check if the reply is valid
    case "$reply" in
      Y*|y*) return 0 ;;
      N*|n*) return 1 ;;
    esac
  done
}

touch_backup() {
  if ! touch $BACKUP_LOGFILE; then
    echo "Error: unable to access a backup file at:"
    echo "  $BACKUP_FILE_PATH_WINDOWS"
    exit 1
  fi
}

archive_backup() {
  archive_dir=$BACKUP_FILE_DIR/archive
  mkdir -p $archive_dir
  check_dir=true
  while [ "$check_dir" = true ]; do
    archive_num=$(find $archive_dir -type f | wc -l)
    if [ $archive_num -gt 5 ]; then
      # check for oldest file according to last modified:
      oldest=$(find $archive_dir -type f -printf '%p\n' | sort | head -n 1)
      # remove oldest:
      rm $oldest
    else
      check_dir=false
    fi
  done

  cp $BACKUP_FILE_PATH_FULL $BACKUP_FILE_DIR/archive/$BACKUP_FILE_NAME"-$(date "+%Y%m%d%H%M%S").tar.gz"
}

backup() {
  if [ ! -f ~/.backup_exclusions ]; then
    # no exclusions file exists in ~, so load a default:
    cp ~/.wsl-ros/default_backup_exclusions ~/.backup_exclusions
  fi

  echo "Backing up your WSL-ROS environment to '$BACKUP_FILE_PATH_WINDOWS', please wait..."

  mkdir -p $BACKUP_FILE_DIR

  touch_backup

  if tar -X $HOME/.backup_exclusions --exclude='.wsl-ros' --checkpoint=.200 -cjf $BACKUP_FILE_PATH_FULL -C $HOME .; then
    echo "$(date): Backup from $(hostname) [wsl-ros version: $WSL_ROS_VER]" >> $BACKUP_LOGFILE
    echo -e ".\nBackup complete."
  else
    echo -e "An error occurred during the backup process...\nYOUR DATA MAY NOT HAVE BEEN BACKED UP CORRECTLY."
  fi
}

restore() {
  echo "Restoring your files from '$BACKUP_FILE_PATH_WINDOWS', please wait..."
  
  touch_backup

  if tar --checkpoint=.200 -xjf $BACKUP_FILE_PATH_FULL -C $HOME ; then
    echo "$(date): Restore to $(hostname) [wsl-ros version: $WSL_ROS_VER]" >> $BACKUP_LOGFILE
    echo -e ".\nRestore complete."
  else
    echo -e "An error occurred during the restore process...\nYOUR DATA MAY NOT HAVE BEEN RECOVERED CORRECTLY."
  fi
}

case $COMMAND in
  backup)
    if backup_exists; then
      echo -e "Preparing to backup your WSL-ROS environment to:"
      echo "  $BACKUP_FILE_PATH_WINDOWS"
      echo "  ***This will overwrite your existing WSL-ROS backup!***" 
      if ask "Are you sure you want to continue?"; then
        archive_backup
        # backup
      else
        echo "Backup cancelled."
        exit 1
      fi
    else
      backup
    fi
    ;;
  restore)
    if backup_exists; then
      echo -e "Preparing to restore from a previous WSL-ROS backup:"
      echo "$BACKUP_FILE_PATH_WINDOWS"
      if ask "Do you want to continue?"; then
        restore
      else
        echo "Restore cancelled."
        exit 1
      fi
    else
      echo "Unable to restore! The file '$BACKUP_FILE_PATH_WINDOWS' does not exist."
      exit 1
    fi
    ;;
  first-launch)
    echo "Welcome to WSL-ROS!"
    if backup_exists; then
      echo -e "It looks like you already have a backup from a previous session:"
      echo "  $BACKUP_FILE_PATH_WINDOWS"
      if ask "Do you want to restore this now?"; then
        restore
      else
        echo "Nothing was restored. Starting from fresh."
        exit 1
      fi
    fi
    ;;
  *)
    echo -e "'$COMMAND' is not a vaild input, see below for options...\n"
    usage
    exit 1
    ;;
esac